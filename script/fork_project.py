#!/usr/bin/env python
import argparse
import logging
from git import Repo

from script import fork_github_repo
from script.git_tool import GitTool

_logger = logging.getLogger(__name__)
CST_GITHUB_TOKEN = "GITHUB_TOKEN"


def get_config():
    """Parse command line arguments, extracting the config file name,
    returning the union of config file and command line arguments

    :return: dict of config file settings and command line arguments
    """
    config = GitTool.get_project_config()

    # TODO update description
    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description='''\
''',
        epilog='''\
'''
    )
    parser.add_argument('--github_token', dest="github_token",
                        default=config.get(CST_GITHUB_TOKEN),
                        help="GitHub token generated by user")
    args = parser.parse_args()
    return args


def main():
    config = get_config()
    github_token = config.github_token

    if not github_token:
        raise ValueError("Missing github_token")
    repo_root = Repo(".")
    GitTool().generate_odoo_install_locally()
    lst_repo = GitTool.get_source_repo_addons()
    i = 0
    total = len(lst_repo)
    for repo in lst_repo:
        i += 1
        print(f"Nb element {i}/{total}")
        url = repo.get("url")
        repo_dir_root = repo.get("path")
        branch_name = None
        upstream_name = "upstream"
        organization_name = "ERPLibre"

        _logger.info(
            f"Fork {url} on dir {repo_dir_root} for organization {organization_name}")

        fork_github_repo.fork_and_clone_repo(
            url,
            github_token,
            repo_dir_root,
            branch_name=branch_name,
            upstream_name=upstream_name,
            organization_name=organization_name,
            # fork_only=True,
            repo_root=repo_root,
        )

    GitTool().generate_odoo_install_locally()


if __name__ == '__main__':
    main()
